<?xml version="1.0" encoding="UTF-8"?>
<!--
	Document: addBeneficiaryBankAccount-3.0.xsd
	Version:  3.0
	Copyright 2009 Earthport Plc. All rights reserved.
-->
<xsd:schema
	xmlns="http://customer.endpoint.earthport.com/api/merchant/v3/services/addBeneficiaryBankAccount"
	targetNamespace="http://customer.endpoint.earthport.com/api/merchant/v3/services/addBeneficiaryBankAccount"
	xmlns:epcore="http://customer.endpoint.earthport.com/api/merchant/v2/components/core"
	xmlns:epbb="http://customer.endpoint.earthport.com/api/merchant/v3/components/bankBase"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified" >

   	<xsd:import namespace="http://customer.endpoint.earthport.com/api/merchant/v3/components/bankBase" 
   		schemaLocation="../components/bankBaseTypes-3.0.xsd" />
    <xsd:import namespace="http://customer.endpoint.earthport.com/api/merchant/v2/components/core" 
    	schemaLocation="../components/coreTypes-2.0.xsd" />

	<xsd:annotation>
		<xsd:documentation>

				 
				This service is used to register a beneficiary bank account in the Earthport system.
				
				It will perform a validation on the parameters provided in order to ensure that the information is correct for the country and currency specified.
				Both bank data and beneficiary identity data are validated. Please refer to the Earthport Payment Guide for specific requirements on each territory.
				If the data provided is not correct or does not match the minimum requirements for the territory the system will return a validation exception. Using the getBeneficiaryBankAccountRequiredData 
				service to obtain the necessary fields for each country/currency combination will minimize the occurrences of exceptions due to missing required data.
								
				It will also check the payer identity currently associated to the user submitting the request.
				If the payer identity is not sufficient to settle on this territory the system will return a warning (refer to additional details on the "WarningsType" definition below). 
				
		</xsd:documentation>
	</xsd:annotation>

	<xsd:element name="addBeneficiaryBankAccount"
		type="AddBeneficiaryBankAccountType" />

	<xsd:complexType name="AddBeneficiaryBankAccountType">
	<xsd:annotation>
		<xsd:documentation>
		
				Input parameters which are required by the "addBeneficiaryBankAccount" service:
				
				The "userID" - Mandatory - (Please refer to the "userIDType" element of the coreTypes.xsd file)
						The userID can either be an "epUserID" or a "merchantUserID" or both.
						At least one element must be provided.
						This is the user to which the bank account will be added.
						
				The "merchantBankID" - Optional - (Please refer to the "MerchantBankIDType" element of the baseBankTypes.xsd file).
							This is an optional identifer used by the merchant to uniquely identify this bank account.
						
				The "beneficiaryBankAccount" - Mandatory - (Please refer to the "BeneficiaryBankAccountType" element of the baseBankTypes.xsd file).
							This element has a number of sub-elements which are detailed in the referred to element.
							This defines the actual bank account that will be added to the user.
		
		</xsd:documentation>
	</xsd:annotation>
	
		<xsd:sequence>
			<xsd:element name="userID"
				type="epcore:UserIDType" minOccurs="1" maxOccurs="1"/>
			<xsd:element name="merchantBankID"
				type="epbb:MerchantBankIDType" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="beneficiaryBankAccount"
				type="epbb:BeneficiaryBankAccountType" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
		<xsd:attribute name="version" type="xsd:decimal" use="required" />
	</xsd:complexType>	
	
	<xsd:element name="addBeneficiaryBankAccountResponse"
		type="AddBeneficiaryBankAccountResponseType">
	</xsd:element>

	<xsd:complexType name="AddBeneficiaryBankAccountResponseType">
			
	<xsd:annotation>
		<xsd:documentation>
		
			Parameters which are returned by the "addBeneficiaryBankAccount" service response:
				
				The "usersBankID" - Mandatory - (Please refer to the "UserBankType" element of the bankBaseTypes.xsd file)
							This is the reference to the bank to which the payment should be made and which has previously been registered.
								
				The warnings - Optional - Please refer to the "WarningsType" element
							These will contain a "key" indicator, a warning code number and a warning value / reason.

		</xsd:documentation>
	</xsd:annotation>
	
		
		<xsd:sequence>
			<xsd:element name="usersBankID"
				type="epbb:UsersBankIDType" minOccurs="1" maxOccurs="1" />
			<xsd:element name="warnings" type="WarningsType" minOccurs="0" maxOccurs="1" />	
		</xsd:sequence>
	</xsd:complexType>

  <xsd:complexType name="WarningsType">
  	<xsd:annotation>
  		<xsd:documentation>
		
				This type defines multiple warnings messages which can be returned back to the caller.
				These messages are not error messages and do not signify a failure with the service request.
				The beneficiary bank account will still be added to the user despite any warnings returned.
  			
				Warnings will relate to the payer identity information associated with the user this bank is being added
				to.  If insufficient payer identity information exists then it should be updated prior to making a payout,
				otherwise the payout service will fail.
			
  		</xsd:documentation>  		
  	</xsd:annotation>
  	<xsd:sequence>
    	<xsd:element name="warning" minOccurs="0" maxOccurs="unbounded" type="WarningType" />
     </xsd:sequence>
  </xsd:complexType>
  

	<xsd:complexType name="WarningType">
		<xsd:annotation>
			<xsd:documentation>
			
				The 'key' attribute defines a context for the returned warning. For example this could be the name of a field which is missing.
				The 'code' attribute defines a warning code number just like the Earthport Validation Exception code numbers
				The 'value' attribute will contain the actual warning message.
				
			</xsd:documentation>
		</xsd:annotation>
        <xsd:sequence>
            <xsd:element name="key" type="xsd:string" nillable="false"/>
            <xsd:element name="code" type="WarningCodeType"/>
            <xsd:element name="value" type="xsd:string" nillable="false"/>            
        </xsd:sequence>
    </xsd:complexType>

	<xsd:simpleType name="WarningCodeType">
  		<xsd:restriction base="xsd:int">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="99999"/>
        </xsd:restriction>
    </xsd:simpleType>
</xsd:schema>
