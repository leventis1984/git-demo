<?xml version="1.0" encoding="UTF-8"?>
<!--
	Document: getBeneficiaryBankAccountRequiredData-3.0.xsd	
	Version:  3.0
	Copyright 2009 Earthport Plc. All rights reserved.
-->
<xsd:schema
	xmlns="http://customer.endpoint.earthport.com/api/merchant/v3/services/getBeneficiaryBankAccountRequiredData"
	targetNamespace="http://customer.endpoint.earthport.com/api/merchant/v3/services/getBeneficiaryBankAccountRequiredData"
	xmlns:epcore="http://customer.endpoint.earthport.com/api/merchant/v2/components/core"
	xmlns:epbb="http://customer.endpoint.earthport.com/api/merchant/v3/components/bankBase"
	xmlns:eppo="http://customer.endpoint.earthport.com/api/merchant/v1/components/payoutBase"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified" >

   	<xsd:import namespace="http://customer.endpoint.earthport.com/api/merchant/v3/components/bankBase" 
   		schemaLocation="../components/bankBaseTypes-3.0.xsd" />
    <xsd:import namespace="http://customer.endpoint.earthport.com/api/merchant/v2/components/core" 
    	schemaLocation="../components/coreTypes-2.0.xsd" />
    <xsd:import namespace="http://customer.endpoint.earthport.com/api/merchant/v1/components/payoutBase" 
    	schemaLocation="../components/payoutBaseTypes-1.2.xsd" />

	<xsd:annotation>
		<xsd:documentation>

			<p>getBeneficiaryBankAccountRequiredData request</p>

			<p>
				Definition of XML document message for the
				getBeneficiaryBankAccountRequiredData request function.
				This function is used by customers to obtain the list of
				beneficiary bank account fields that should be supplied
				in order to successfully register a bank account.
			</p>

			<p>
				This service should normally be called just before
				making a service request to addBeneficiaryBankAccount or
				validateBeneficiaryBankAccount so as to discover the
				mandatory bank account fields that will be expected and
				ensure they are supplied.
			</p>

			<p>
				The request message should contain a country, a currency
				an optional locale and an optional service level. 
				
				If the locale parameter is not supplied it will 
				assume a default value of 'en'.
				
				If the service level parameter is not supplied it will 
				assume a default value of 'standard'.
			</p>

		</xsd:documentation>
	</xsd:annotation>

	<xsd:element name="getBeneficiaryBankAccountRequiredData"
		type="GetBeneficiaryBankAccountRequiredDataType" />

	<xsd:complexType name="GetBeneficiaryBankAccountRequiredDataType">
		<xsd:sequence>
			<xsd:element name="countryCode" type="epcore:CountryCodeType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="currencyCode" type="epcore:CurrencyCodeType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="locale" type="epcore:LocaleType"
				minOccurs="0" maxOccurs="1" />
			<xsd:element name="serviceLevel" type="eppo:ServiceLevelType"
				minOccurs="0" maxOccurs="1" />
		</xsd:sequence>
		<xsd:attribute name="version" type="xsd:decimal" use="required" />
	</xsd:complexType>


	<xsd:annotation>
		<xsd:documentation>

			<p>getBeneficiaryBankAccountRequiredData response</p>

			<p>
				Definition of XML document message returned by the
				getBeneficiaryBankAccountRequiredData function.
			</p>

			<p>
				Following a successful service call, the response
				contains a number of beneficiaryBankAccountFieldGroup
				elements.

				<b>beneficiaryBankAccountFieldGroup</b>
				<br/>
				Each beneficiaryBankAccountFieldGroup describes one logical
				grouping of bank account data. Each beneficiaryBankAccountFieldGroup
				would normally be displayed in the UI on a separate horizontal row.
				
				It contains the attributes
				
				<ul>
					<li>groupLabel: the suggested UI label for the group</li>
					<li>mandatory: if true indicates that it is mandatory for data to be entered in the input fields</li>
				</ul>
				
				<br/>
				and is composed of one or more beneficiaryBankAccountField elements.
				
				<br/>
				<b>beneficiaryBankAccountField</b>
				<br/>
				
				Each beneficiaryBankAccountField would normally be displayed 
				in the UI from left to right based on the tabOrder attribute.
				<br/>
				The beneficiaryBankAccountField element contains
				the following attributes:
				
				<ul>
					<li>tabOrder: indicates the ordering of this field in the UI</li>
					<li>parameterName: the name of the corresponding Earthport parameter to use when calling addBeneficiaryBankAcount</li>
					<li>displaySize: a suggested field size to display</li>
					<li>maxSize: suggested client side syntactic validation rule</li>
					<li>description: suggested roll-over or help text description to assist users</li>
					<li>separator: the separator to display following (to the right hand side) this field, usually '-' or '/'</li>
					<li>inputType: whether this field should be represented as a text field or a list of options</li>
					<li>subTitle: if present contains a sub-label to be displayed with the field</li>
					<li>locale: the localisation setting of this particular record</li>
				</ul>
				
				<br/>
				The beneficiaryBankAccountField contains optional listItem sub-elements.
				The listItem sub-elements would normally be present where the inputType 
				attribute is <i>'list'</i>. 
				<br/>
												
				<b>listItem</b>
				<br/>
				The listItem element contains the attributes
				<ul>
					<li>label: the name of the option in the list</li>
					<li>value: the value of the corresponding paramaterName if the list item is selected</li>
				</ul>
				
				<p>
				Once values have been supplied for every one of the beneficiaryBankAccountField
				elements, there is now sufficient data to fully populate the bankAccountDetails
				portion of the beneficiaryBankAccount element as required by the
				validateBeneficiaryBankAccount and addBeneficiaryBankAccount services.
				</p>
			</p>

		</xsd:documentation>
	</xsd:annotation>
  	
  	<xsd:element name="getBeneficiaryBankAccountRequiredDataResponse" type="GetBeneficiaryBankAccountRequiredDataResponseType" />
	
  	<xsd:complexType name="GetBeneficiaryBankAccountRequiredDataResponseType">
    	<xsd:sequence minOccurs="1" maxOccurs="1">
      		<xsd:element name="beneficiaryBankAccountFieldGroupsList" type="epbb:BeneficiaryBankAccountGroupsListType" />
    	</xsd:sequence>	
  	</xsd:complexType>
	
</xsd:schema>