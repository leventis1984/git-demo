<?xml version="1.0" encoding="UTF-8"?>
<!--
	Document: bankBaseTypes-1.0.xsd
	Version:  1.0
	Copyright 2008 Earthport Plc. All rights reserved.
-->
<xsd:schema
	xmlns="http://customer.endpoint.earthport.com/api/merchant/v1/components/bankBase"
	targetNamespace="http://customer.endpoint.earthport.com/api/merchant/v1/components/bankBase"
	xmlns:epcore="http://customer.endpoint.earthport.com/api/merchant/v1/components/core"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified">

    <xsd:import namespace="http://customer.endpoint.earthport.com/api/merchant/v1/components/core" 
    	schemaLocation="coreTypes-1.0.xsd" />

	<xsd:annotation>
		<xsd:documentation>
			Bank context base type definitions as used by the Earthport
			UPN Merchant API
		</xsd:documentation>
	</xsd:annotation>

	<xsd:complexType name="BenBankIDType">
		<xsd:annotation>
			<xsd:documentation>
				This group consists of all possible beneficiary bank
				identifier types.

				The 'epBankID' field is a unique identifier for a
				beneficiary bank account.

				The 'merchantBankID' is an optional merchant specified
				identifier for the beneficiary bank account.

				The 'epBankID', 'merchantBankID' or both 'epBankID' and
				'merchantBankID' can be supplied. A mapping will be
				performed to retrieve the merchant bank ID from the
				supplied EP bank ID and vice versa.

				If both the 'epBankID' and 'merchantBankID' are
				supplied, a check will be performed to ensure that the
				two are mapped. If the two provided fields are not
				mapped, then a validation error code will be returned.

				At least one of the fields must be populated.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="epBankID" type="EPBankIDType"
				minOccurs="0" maxOccurs="1" />
			<xsd:element name="merchantBankID" type="MerchantBankIDType"
				minOccurs="0" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="MerchantBankIDType">
		<xsd:annotation>
			<xsd:documentation>
				The merchant specified ID for a beneficiary bank
				account.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1" />
			<xsd:maxLength value="100" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="EPBankIDType">
		<xsd:annotation>
			<xsd:documentation>
				The unique ID of a beneficiary bank account.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:long">
			<xsd:minInclusive value="0" />
			<xsd:maxInclusive value="9999999999999" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="BeneficiaryBankAccountType">
		<xsd:annotation>
			<xsd:documentation>
				This type provides all the possible information required
				to identify a beneficiary bank account.

				The identity of the beneficiary of this bank account is
				mandatory and must be supplied in the
				'beneficiaryIdentity' field.

				A description of this bank account is mandatory and must
				be supplied in the 'description' field.

				The territory in which this bank account is domiciled is
				mandatory and must be supplied in the 'countryCode'
				field as a 2 character country code.

				The currency held in this bank account may optionally
				be supplied in the 'currencyCode' field as a 3 character 
				currency code. If not supplied it will assume the
				default currency of the 'countryCode' parameter.
				
				The mandatory 'bankAccountDetails' is a group of
				sub-elements which collectively identify both the bank
				and the account within the bank.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="beneficiaryIdentity"
				type="epcore:BeneficiaryIdentityType" minOccurs="1" maxOccurs="1" />
			<xsd:element name="description"
				type="BeneficiaryBankAccountDescType" minOccurs="1" maxOccurs="1" />
			<xsd:element name="countryCode" type="epcore:CountryCodeType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="currencyCode" type="epcore:CurrencyCodeType"
				minOccurs="0" maxOccurs="1" />
			<xsd:element name="bankAccountDetails"
				type="BankAccountDetailsType" minOccurs="1" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="BeneficiaryBankAccountDescType">
		<xsd:annotation>
			<xsd:documentation>
				Type which defines a beneficiary bank account
				description. Each bank account must be given a
				description therefore this is a mandatory component of
				the BeneficiaryBankAccountType complex type.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1" />
			<xsd:maxLength value="254" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="BankAccountDetailsType">
		<xsd:annotation>
			<xsd:documentation>
				<p>
				This group consists of all possible account identifier
				types. The data which should be supplied in this group
				differs depending on the bank account territory. Please
				refer to the integration guide for territory specific
				details of what should be supplied.
				</p>
				
				<p>
				The following set of parameter names are valid 'keys':
				<ul>					
	    			<li>accountName</li>
    				<li>accountNumber</li>
    				<li>accountNumberPrefix</li>
    			    <li>accountNumberSuffix</li>
    			    <li>iban</li>    
    			    <li>type</li>
    			    <li>bankName</li>
    			    <li>bankCode</li>
    			    <li>holdingBranchName</li>
    			    <li>branchCode</li>
    			    <li>sortCode</li>
    			    <li>swiftBic</li>
    			    <li>bic</li>
    			    <li>abaRoutingNumber</li>
    			    <li>miscField1</li>
    			    <li>miscField2</li>
    			    <li>miscField3</li>					
				</ul>
				</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="key" type="BankAccountDetailsKeyType" minOccurs="1" maxOccurs="1" />
			<xsd:element name="value" type="BankAccountDetailsValueType" minOccurs="1" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="BankAccountDetailsKeyType">
		<xsd:annotation>
			<xsd:documentation>
				Type which defines the allowable data which may be
				passed to the "key" element of the BankAccountDetailsType
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1" />
			<xsd:maxLength value="50" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="BankAccountDetailsValueType">
		<xsd:annotation>
			<xsd:documentation>
				Type which defines the allowable data which may be
				passed to the "value" element of the BankAccountDetailsType
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="1" />
			<xsd:maxLength value="100" />
		</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:complexType name="UsersBankIDType">
		<xsd:annotation>
			<xsd:documentation>
				This group consists of a collection of both the user ID
				group and beneficiary bank ID group.

				The 'userID' is a collection of user identifier types.

				The 'benBankID' is a collection of account identifier
				types.

				Both the 'userID' and 'benBankID' fields are mandatory.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="userID" type="epcore:UserIDType" minOccurs="1"
				maxOccurs="1" />
			<xsd:element name="benBankID" type="BenBankIDType"
				minOccurs="1" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="BenBankType">
		<xsd:annotation>
			<xsd:documentation>
				This group consists of a collection of both the
				beneficiary bank ID token and associated beneficiary
				bank account group.

				This is used as a return type for the
				listActiveBeneficiaryBankAccount service.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="benBankID" type="BenBankIDType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="benBankAccount"
				type="BeneficiaryBankAccountType" minOccurs="1" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="BeneficiaryBankAccountSummaryType">
		<xsd:annotation>
			<xsd:documentation>
				This group consists of a collection of both the
				beneficiary bank ID token and a small set of values summarising the associated 
				beneficiary	bank account.

				This is used as a return type for the
				listBankSummary service.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="benBankID" type="BenBankIDType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="description"
				type="BeneficiaryBankAccountDescType" minOccurs="1" maxOccurs="1" />
			<xsd:element name="countryCode" type="epcore:CountryCodeType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="bankAccountDetails"
				type="BankAccountDetailsType" minOccurs="1" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:complexType name="BeneficiaryBankAccountGroupsListType">
		<xsd:annotation>
			<xsd:documentation>
				This type defines a list of bank account data groups.
				Each group is normally represented as a row on the UI.
			</xsd:documentation>
		</xsd:annotation>
   		<xsd:sequence>
    		<xsd:element name="beneficiaryBankAccountFieldGroup" type="BeneficiaryBankAccountGroupType" minOccurs="0" maxOccurs="unbounded" />
   		</xsd:sequence>
  	</xsd:complexType>
  	
  	<xsd:complexType name="BeneficiaryBankAccountGroupType">
		<xsd:annotation>
			<xsd:documentation>
				This type defines a bank account data group.
				Each group is normally represented as a row on the UI.
				'groupLabel' is the UI test to display as a name for this row.
				'mandatory' indicates whether values must be supplied in the 
				fields of this group.				
			</xsd:documentation>
		</xsd:annotation>
    	<xsd:sequence minOccurs="1" maxOccurs="1">
      		<xsd:element name="beneficiaryBankAccountFieldsList" type="BeneficiaryBankAccountFieldsListType" />
    	</xsd:sequence>	
		<xsd:attribute name="groupLabel" type="xsd:string" use="required" />
		<xsd:attribute name="mandatory" type="xsd:string"  use="required" />
  	</xsd:complexType>

  	<xsd:complexType name="BeneficiaryBankAccountFieldsListType">
		<xsd:annotation>
			<xsd:documentation>
				This type defines a bank account field.
			</xsd:documentation>
		</xsd:annotation>
   		<xsd:sequence>
    		<xsd:element name="beneficiaryBankAccountField" type="BeneficiaryBankAccountFieldType" minOccurs="0" maxOccurs="unbounded" />
   		</xsd:sequence>
  	</xsd:complexType>
  	
	<xsd:complexType name="BeneficiaryBankAccountFieldType">
		<xsd:annotation>
			<xsd:documentation>
				Each beneficiaryBankAccountField would normally be displayed 
				in the UI from left to right based on the tabOrder attribute.
				<br/>
				The beneficiaryBankAccountField element contains
				the following attributes:
				
				<ul>
					<li>tabOrder: indicates the ordering of this field in the UI</li>
					<li>parameterName: the name of the corresponding Earthport parameter to use when calling addBeneficiaryBankAcount</li>
					<li>displaySize: a suggested field size to display</li>
					<li>maxSize: suggested client side syntactic validation rule</li>
					<li>description: suggested roll-over or help text description to assist users</li>
					<li>separator: the separator to display following (to the right hand side) this field, usually '-' or '/'</li>
					<li>inputType: whether this field should be represented as a text field or a list of options</li>
					<li>subTitle: if present contains a sub-label to be displayed with the field</li>
					<li>locale: the localisation setting of this particular record</li>
					<li>value: the current value of this field, populated by the getBeneficiaryBankAccount service</li>
				</ul>				
			</xsd:documentation>
		</xsd:annotation>
	
		<xsd:sequence>
    		<xsd:element name="listItems" type="BeneficiaryBankAccountListItemsType" minOccurs="0" maxOccurs="1" />    	
		</xsd:sequence>    		
		<xsd:attribute name="tabOrder" type="xsd:int" use="required" />
		<xsd:attribute name="parameterName" type="xsd:string" use="required" />
		<xsd:attribute name="separator" type="xsd:string" use="required" />
		<xsd:attribute name="displaySize" type="xsd:int" use="required" />
		<xsd:attribute name="maxSize" type="xsd:int" use="required" />
		<xsd:attribute name="description" type="xsd:string" use="required" />
		<xsd:attribute name="subTitle" type="xsd:string" use="required" />
		<xsd:attribute name="inputType" type="BeneficiaryBankAccountFieldInputType" use="required" />
		<xsd:attribute name="locale" type="xsd:string" use="required" />
		<xsd:attribute name="value" type="xsd:string" />
		
	</xsd:complexType>

  	<xsd:complexType name="BeneficiaryBankAccountListItemsType">
        <xsd:annotation>
            <xsd:documentation>
  				The beneficiaryBankAccountField contains optional listItem sub-elements.
				The listItem sub-elements would normally be present where the inputType 
				attribute is <i>'list'</i>. 
            </xsd:documentation>
        </xsd:annotation>  	
   		<xsd:sequence>
    		<xsd:element name="beneficiaryBankAccountField" type="BeneficiaryBankAccountListItemType" minOccurs="1" maxOccurs="unbounded" />
   		</xsd:sequence>
	</xsd:complexType>
	
  	<xsd:complexType name="BeneficiaryBankAccountListItemType">
		<xsd:attribute name="label" type="xsd:string" use="required" />
		<xsd:attribute name="value" type="xsd:string" use="required" />
	</xsd:complexType>
	
    <xsd:simpleType name="BeneficiaryBankAccountFieldInputType">
        <xsd:annotation>
            <xsd:documentation>
                Supported input types for a bank registration UI.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="text" />
            <xsd:enumeration value="list" />
        </xsd:restriction>
    </xsd:simpleType>
	
</xsd:schema>